# roles/rdir/tasks/main.yml
---
- name: "Include {{ ansible_distribution }} variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags:
    - install
    - configure

- name: "Include {{ ansible_distribution }} tasks"
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- name: Ensure directories exists
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('openio') }}"
    group: "{{ item.group | default('openio') }}"
    mode: "{{ item.mode | default(0755) }}"
  with_items:
    - path: "/etc/gridinit.d/{{ openio_rdir_namespace }}"
    - path: "{{ openio_rdir_sysconfig_dir }}/{{ openio_rdir_servicename }}"
    - path: "{{ openio_rdir_volume }}"
    - path: "/etc/oio/sds/{{ openio_rdir_namespace }}/watch"
    - path: "/var/log/oio/sds/{{ openio_rdir_namespace }}/{{ openio_rdir_servicename }}"
      owner: "{{ syslog_user }}"
      mode: "0750"
  tags: configure

- name: Generate configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: openio
    group: openio
    mode: 0640
  with_items:
    - src: "rdir.conf.j2"
      dest: "{{ openio_rdir_sysconfig_dir }}/\
        {{ openio_rdir_servicename }}/{{ openio_rdir_servicename }}.conf"
    - src: "gridinit_rdir.conf.j2"
      dest: "{{ openio_rdir_gridinit_dir }}/{{ openio_rdir_gridinit_file_prefix }}\
        {{ openio_rdir_servicename }}.conf"
    - src: "watch-rdir.yml.j2"
      dest: "{{ openio_rdir_sysconfig_dir }}/watch/{{ openio_rdir_servicename }}.yml"
  register: _rdir_conf_present
  tags: configure
  when: openio_rdir_state == 'present'

- name: Generate configuration files
  file:
    dest: "{{ item.dest }}"
    state: "{{ openio_rdir_state }}"
  with_items:
    - dest: "{{ openio_rdir_sysconfig_dir }}/\
        {{ openio_rdir_servicename }}/{{ openio_rdir_servicename }}.conf"
    - dest: "{{ openio_rdir_gridinit_dir }}/{{ openio_rdir_gridinit_file_prefix }}\
        {{ openio_rdir_servicename }}.conf"
    - dest: "{{ openio_rdir_sysconfig_dir }}/watch/{{ openio_rdir_servicename }}.yml"
  register: _rdir_conf_absent
  tags: configure
  when: openio_rdir_state == 'absent'

- block:
    - name: "stop rdir to apply the new configuration"
      shell: gridinit_cmd stop  {{ openio_rdir_namespace }}-{{ openio_rdir_servicename }}
      when:
        - _rdir_conf_absent is changed
        - openio_rdir_state == 'absent'

    - name: "reload gridinit to apply the new configuration"
      shell: gridinit_cmd reload
      when:
        - _rdir_conf_present is changed or _rdir_conf_absent is changed

    - name: "restart rdir to apply the new configuration"
      shell: gridinit_cmd restart  {{ openio_rdir_namespace }}-{{ openio_rdir_servicename }}
      register: _restart_rdir
      when:
        - _rdir_conf_present is changed
        - openio_rdir_state == 'present'
  when:
    - not openio_rdir_provision_only
  tags: configure

- block:
    - name: "Ensure rdir is started"
      command: gridinit_cmd start {{ openio_rdir_namespace }}-{{ openio_rdir_servicename }}
      register: _start_rdir
      changed_when: '"Success" in _start_rdir.stdout'
      when:
        - not openio_rdir_provision_only
        - openio_rdir_state == 'present'
        - _restart_rdir is skipped
      tags: configure

    - name: check rdir
      uri:
        url: "http://{{ openio_rdir_bind_address }}:{{ openio_rdir_bind_port }}/status"
        return_content: true
        status_code: 200
      register: _rdir_check
      retries: 30
      delay: 0.5
      until: _rdir_check is success
      changed_when: false
      tags: configure
      when:
        - not openio_rdir_provision_only
        - openio_rdir_state == 'present'
  when: openio_bootstrap | d(false)
...
